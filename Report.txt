Abstract:
System calls serve as a critical interface between user applications and the operating system. Monitoring system calls is essential for security auditing, performance analysis, and debugging. This project focuses on developing a real-time system call monitoring tool using Python, BCC (BPF Compiler Collection), and eBPF (Extended Berkeley Packet Filter). eBPF enables efficient, low-overhead kernel-level monitoring without modifying the kernel source code.The tool leverages BCCâ€™s Python bindings to dynamically attach eBPF probes to system calls, capturing key details such as process ID, command name, user ID, and arguments. Collected data is filtered, processed, and displayed in real time, allowing users to track suspicious activity, diagnose performance bottlenecks, and analyze system behavior.This project provides an efficient, scalable, and non-intrusive approach to system call tracing, making it ideal for security analysts, system administrators, and developers seeking deeper insights into system interactions.

